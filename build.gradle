plugins {
    id 'java'
    id 'maven-publish'
    id 'jacoco'
}

group 'org.jmantic'
version '0.3.2'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
//  https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    implementation 'org.slf4j:slf4j-simple:2.0.0-alpha5'

//  https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'

    implementation 'org.java-websocket:Java-WebSocket:1.5.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/artrayme/jmantic")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            groupId 'org.jmantic'
            artifactId 'jmantic'
            version '0.3.2'
            from(components.java)
        }
    }
}


// Create jar archive with dependencies
jar {
    from {
        configurations.runtimeClasspath.filter{ it.exists() }.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

jacocoTestReport {
    dependsOn test

    reports {
        csv.enabled true
        xml.required = false
        csv.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

}

